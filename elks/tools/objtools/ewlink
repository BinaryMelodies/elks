#!/usr/bin/env bash
#
# ewlink - OpenWatcom wlink script for ELKS
#
# Usage: ewlink file1.obj file2.obj ...
#   produces file1.os2 (for OS/2) and file1 (for ELKS)
#
# 3 Jun 2024 Compact model only for now
#
set -e

if [ -z "$TOPDIR" ]
  then
    echo "ELKS TOPDIR= environment variable not set"
    exit
fi

if [ -z "$WATCOM" ]
  then
    echo "WATCOM= environment variable not set to compiler path"
    exit
fi

if [ -z "$WATDIR" ]
  then
    echo "WATDIR= environment variable not set to Watcom source directory"
    exit
fi

if [ $# -eq 0 ]
  then
    echo "Usage: ewcc <filename>.c"
    exit
fi

ELKSLIBC=$TOPDIR/libc
ELKSLIBCINCLUDE=$TOPDIR/libc/include
ELKSINCLUDE=$TOPDIR/elks/include
WATCINCLUDE=$WATDIR/bld/hdr/dos/h

# -mregparm=0
# -fpmath
# -mabi=cdecl               # push all args
# -msoft-float              # -Wc,-fpc
# -Wc,-fpc                  # soft fp
# -mhard-emu-float          # -Wc,-fpi
# -Wc,-fpi87                # inline 8087 fp
# -Wc,-zev                  # enable void arithmetic
# -std=c99                  # -Wc,-za99
# -fnonconst-initializers   # -Wc,aa

CCFLAGS="\
    -bos2                           \
    -mcmodel=c                      \
    -march=i86                      \
    -std=c99                        \
    -fno-stack-check                \
    -Wc,-fpi87                      \
    -Wc,-zev                        \
    -fnostdlib                      \
    -I$ELKSLIBCINCLUDE              \
    -I$ELKSINCLUDE                  \
    -I$WATCINCLUDE                  \
    "

LDFLAGS="\
    -bos2 -s                        \
    -Wl,disable -Wl,1014            \
    -Wl,option -Wl,start=_start_    \
    -Wl,option -Wl,dosseg           \
    -Wl,option -Wl,stack=0x1000     \
    "

PROG=$1
OUT=${PROG%.obj}

owcc -v -bos2 $CCFLAGS $LDFLAGS -o $OUT.os2 $@ $ELKSLIBC/libc.lib
os2toelks -f elks -o $OUT $OUT.os2

# dump OS/2 binary
#os2dump $OUT.os2

# copy to ELKS filesystem root user directory
#cp $OUT $TOPDIR/elkscmd/rootfs_template/root
